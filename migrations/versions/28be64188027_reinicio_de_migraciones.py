"""Reinicio de migraciones

Revision ID: 28be64188027
Revises: 
Create Date: 2025-02-13 15:36:06.307965

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '28be64188027'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('mensajes')
    op.drop_table('amigos')
    with op.batch_alter_table('ecopuntos', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('tipo',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.drop_constraint('ecopuntos_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('publicacion_hashtag', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True))
        batch_op.drop_constraint('publicacion_hashtag_hashtag_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('publicacion_hashtag_publicacion_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'hashtags', ['hashtag_id'], ['id'])
        batch_op.create_foreign_key(None, 'publicaciones', ['publicacion_id'], ['id'])

    with op.batch_alter_table('publicaciones', schema=None) as batch_op:
        batch_op.add_column(sa.Column('hashtag', sa.String(length=20), nullable=False))
        batch_op.add_column(sa.Column('ubicacion', sa.String(length=255), nullable=True))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('contenido',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('imagen',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.drop_constraint('publicaciones_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('reportes', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('ubicacion',
               existing_type=sa.String(),  # o el tipo de dato adecuado (Integer, Text, etc.
               nullable=True)
        batch_op.alter_column('imagen',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.drop_constraint('reportes_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('foto_perfil',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('foto_perfil',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=True)

    with op.batch_alter_table('reportes', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('reportes_user_id_fkey', 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('imagen',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('ubicacion',
               existing_type=sa.NullType(),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('publicaciones', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('publicaciones_user_id_fkey', 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('imagen',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('contenido',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('ubicacion')
        batch_op.drop_column('hashtag')

    with op.batch_alter_table('publicacion_hashtag', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('publicacion_hashtag_publicacion_id_fkey', 'publicaciones', ['publicacion_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('publicacion_hashtag_hashtag_id_fkey', 'hashtags', ['hashtag_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('ecopuntos', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('ecopuntos_user_id_fkey', 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('tipo',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    op.create_table('amigos',
    sa.Column('user1_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user2_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.CheckConstraint("status::text = ANY (ARRAY['pendiente'::character varying, 'aceptado'::character varying]::text[])", name='amigos_status_check'),
    sa.ForeignKeyConstraint(['user1_id'], ['users.id'], name='amigos_user1_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user2_id'], ['users.id'], name='amigos_user2_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user1_id', 'user2_id', name='amigos_pkey')
    )
    op.create_table('mensajes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('emisor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('receptor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('mensaje', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['emisor_id'], ['users.id'], name='mensajes_emisor_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['receptor_id'], ['users.id'], name='mensajes_receptor_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='mensajes_pkey')
    )
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('srid > 0 AND srid <= 998999', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    # ### end Alembic commands ###
