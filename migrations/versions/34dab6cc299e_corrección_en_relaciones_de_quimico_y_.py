"""Correcci√≥n en relaciones de Quimico y Tarea

Revision ID: 34dab6cc299e
Revises: 
Create Date: 2025-01-28 19:52:04.709473

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '34dab6cc299e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('dias', schema=None) as batch_op:
        batch_op.drop_constraint('fenologia_cultivo_id_cultivo_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'cultivo', ['id_cultivo'], ['id'])

    with op.batch_alter_table('historial', schema=None) as batch_op:
        batch_op.add_column(sa.Column('observacion', sa.Text(), nullable=True))
        batch_op.drop_constraint('historial_id_lote_fkey', type_='foreignkey')
        batch_op.drop_constraint('historial_id_usuario_fkey', type_='foreignkey')
        batch_op.drop_constraint('historial_id_tarea_fkey', type_='foreignkey')
        batch_op.drop_constraint('historial_id_quimico_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'tarea', ['id_tarea'], ['id'])
        batch_op.create_foreign_key(None, 'usuario', ['id_usuario'], ['id'])
        batch_op.create_foreign_key(None, 'lote', ['id_lote'], ['id'])
        batch_op.create_foreign_key(None, 'quimico', ['id_quimico'], ['id'])

    with op.batch_alter_table('lote', schema=None) as batch_op:
        batch_op.drop_constraint('lote_fundo_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('lote_cultivo_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'cultivo', ['cultivo_id'], ['id'])
        batch_op.create_foreign_key(None, 'fundo', ['fundo_id'], ['id'])

    with op.batch_alter_table('quimico', schema=None) as batch_op:
        batch_op.alter_column('id_dias',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('fk_fenologia_cultivo', type_='foreignkey')
        batch_op.create_foreign_key(None, 'dias', ['id_dias'], ['id'])
        batch_op.drop_column('fenologia')

    with op.batch_alter_table('tarea', schema=None) as batch_op:
        batch_op.alter_column('id_dias',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('tarea_id_quimico_fkey', type_='foreignkey')
        batch_op.drop_constraint('tarea_id_usuario_fkey', type_='foreignkey')
        batch_op.drop_constraint('tarea_id_lote_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'usuario', ['id_usuario'], ['id'])
        batch_op.create_foreign_key(None, 'quimico', ['id_quimico'], ['id'])
        batch_op.create_foreign_key(None, 'lote', ['id_lote'], ['id'])
        batch_op.create_foreign_key(None, 'dias', ['id_dias'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tarea', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('tarea_id_lote_fkey', 'lote', ['id_lote'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('tarea_id_usuario_fkey', 'usuario', ['id_usuario'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('tarea_id_quimico_fkey', 'quimico', ['id_quimico'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('id_dias',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('quimico', schema=None) as batch_op:
        batch_op.add_column(sa.Column('fenologia', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_fenologia_cultivo', 'dias', ['id_dias'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('id_dias',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('lote', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('lote_cultivo_id_fkey', 'cultivo', ['cultivo_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('lote_fundo_id_fkey', 'fundo', ['fundo_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('historial', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('historial_id_quimico_fkey', 'quimico', ['id_quimico'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('historial_id_tarea_fkey', 'tarea', ['id_tarea'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('historial_id_usuario_fkey', 'usuario', ['id_usuario'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('historial_id_lote_fkey', 'lote', ['id_lote'], ['id'], ondelete='CASCADE')
        batch_op.drop_column('observacion')

    with op.batch_alter_table('dias', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fenologia_cultivo_id_cultivo_fkey', 'cultivo', ['id_cultivo'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###
